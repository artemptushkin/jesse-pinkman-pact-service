# This is a basic workflow to help you get started with Actions

name: CI with Pact contracts test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches-ignore:
      - master
  workflow_dispatch:
    inputs:
      pact.consumer.tags:
        description: pact tags separated by comma
        default: test
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      GIT_COMMIT: ${GITHUB_SHA::8}
      GIT_BRANCH: ${GITHUB_REF#refs/heads/}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: build
        run: ./mvnw clean package
      - name: publish pacts
        run: ./mvnw pact:publish -Dpact.consumer.tags=$GIT_BRANCH -Dpact.consumer.version=$GIT_COMMIT
      - name: can i deploy to test
        env:
          PACT_BROKER_BASE_URL: https://hello.pact.dius.com.au/
          PACT_BROKER_TOKEN: GJADqmiVcrtQu5rjyxpjIQ
        run: |
          docker run --rm \
            -e PACT_BROKER_BASE_URL \
            -e PACT_BROKER_TOKEN \
            pactfoundation/pact-cli:latest \
            broker can-i-deploy \
            -a jesse-pinkman \
            -e $GIT_COMMIT \
            -t test
            --latest
        
